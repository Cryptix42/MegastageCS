; *************************
; Project: MegastageCS
; File: MegastageCS.main.dasm
; *************************
:init
ias interrupt_manager
set a, 0
jsr init_screen
;jsr xlcmg_assigner
jsr update_screen
jsr keyboard_select
:key_control_loop
jsr keyboard_read_buffer
ife c, 0
set pc, key_control_loop
ife c, key_space
jsr update_screen
ife c, key_arrow_right
jsr page_right
ife c, key_arrow_left
jsr page_left
ife [page], 3
set pc, target_key_loop
ife c, key_w
jsr w_pitch
ife c, key_a
jsr a_pitch
ife c, key_s
jsr s_yaw
ife c, key_d
jsr d_yaw
ife c, key_q
jsr q_roll
ife c, key_e
jsr e_roll
ife c, key_control
jsr control_throttle
ife c, key_shift
jsr shift_throttle
set pc, key_control_loop
:target_key_loop
ife c, key_1
jsr target_selection
ife c, key_2
jsr target_selection
ife c, key_3
jsr target_selection
ife c, key_4
jsr target_selection
ife c, key_5
jsr target_selection
ife c, key_6
jsr target_selection
ife c, key_7
jsr target_selection
ife c, key_8
jsr target_selection
ife c, key_9
jsr target_selection
ife c, key_a
jsr target_selection
ife c, key_b
jsr target_selection
ife c, key_c
jsr target_selection
ife c, key_d
jsr target_selection
ife c, key_e
jsr target_selection
ife c, key_f
jsr target_selection
set pc, key_control_loop

:target_selection

set pc, pop

:page_right
ifn [page], end_page
add [page], 1
jsr update_screen
set pc, pop

:page_left
ifn [page], 0
sub [page], 1
jsr update_screen
set pc, pop

:w_pitch
set push, a
set push, b
set a, [gyro_z_index]
jsr xlcmg_select
add b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:a_pitch
set push, a
set push, b
set a, [gyro_z_index]
jsr xlcmg_select
sub b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:s_yaw
set push, a
set push, b
set a, [gyro_y_index]
jsr xlcmg_select
sub b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:d_yaw
set push, a
set push, b
set a, [gyro_y_index]
jsr xlcmg_select
sub b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:q_roll
set push, a
set push, b
set a, [gyro_x_index]
jsr xlcmg_select
sub b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:e_roll
set push, a
set push, b
set a, [gyro_x_index]
jsr xlcmg_select
sub b, 100
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:control_throttle
set pc, pop

:shift_throttle
set pc, pop

:pause
set a, 0
set pc, pause

:end
set pc, end

.include HWdrivers\Clock.drv.dasm
.include HWdrivers\FFA.drv.dasm
.include HWdrivers\HTA-90.drv.dasm
.include HWdrivers\Keyboard.drv.dasm
.include HWdrivers\LEM1802.drv.dasm
;.include HWdrivers\M35FD.drv.dasm ====== NOT YET
.include HWdrivers\NCC-1701.drv.dasm
.include HWdrivers\PPS.drv.dasm
.include HWdrivers\S8MD.drv.dasm
.include HWdrivers\XLCMG.drv.dasm
.include Libraries\Display.lib.dasm
.include Libraries\Utility.lib.dasm
.include Managers\Error.mgr.dasm
.include Managers\Interrupt.mgr.dasm
.include Data\CONST.dat.dasm
.include Data\ALLOC.dat.dasm