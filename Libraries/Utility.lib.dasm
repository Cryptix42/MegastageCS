; *************************
; Project: MegastageCS
; File: Utility.lib.dasm
; *************************
:memory_copy ;Param: A, B, and C. A = start of ram to be copied, B = start of ram to be copied to, C = length of both areas
set push, a
set push, b
set push, c
set push, i
set [util_var1], a
set a, 0xffff
sub b, 1
:mem_copy_loop
add a, 1
add b, 1
set [b], [util_var1+a]
ifn a, c
set pc, mem_copy_loop
set i, pop
set c, pop
set b, pop
set a, pop
set pc, pop
:util_var1 dat 0

:memory_bor ;Param: A, B, and C. A = value to process with, B = start of ram to be processed, C = length of area
set push, a
set push, b
set push, c
set push, i
add c, 1
sub b, 1
:mem_copy_loop2
sub c, 1
add b, 1
bor [b], a
ifn c, 0
set pc, mem_copy_loop2
set i, pop
set c, pop
set b, pop
set a, pop
set pc, pop

:memory_fill

set pc, pop

:xlcmg_assigner
set push, a
set push, b
set push, c
set push, i
set a, 0xffff
jsr xlcmg_amount
set c, a
:xlcmg_assgn_loop
add a, 1
jsr xlcmg_select
jsr xlcmg_get_axis_vector
ife b, 0x0100
set [gyro_x_index], a
ife b, 0x0010
set [gyro_y_index], a
ife b, 0x0001
set [gyro_z_index], a
ifn a, c
set pc, xlcmg_assn_loop
set i, pop
set c, pop
set b, pop
set a, pop
set pc, pop

:gyro_x_index dat 0 ;roll gyro
:gyro_y_index dat 0 ;yaw gyro
:gyro_z_index dat 0 ;pitch gyro

:s8md_forwards_index dat 0
:s8md_reverse_index dat 0