; *************************
; Project: CryptOS
; File: CryptOS.main.dasm
; *************************
:init
ias interrupt_manager
jsr keyboard_select
jsr lem1802_select
jsr clock_select
jsr screen_update_set
set [mode], prompt_mode_num
set a, prompt_vram
set c, vram_size
set b, text_color
jsr memory_bor
set b, prompt_vram
jsr lem1802_map_VRAM
set a, 0
set b, 0
set c, 0
;============================End of init======================================
:key_control_loop
set c, 0
jsr keyboard_read_buffer
ife c, 0
set pc, key_control_loop
;===mode toggles===
ife c, key_control
set pc, control_loop
ife [mode], pilot_mode_num
set pc, pilot_key_loop
:prompt_key_loop
set push, a
ife c, key_backspace
set pc, backspace
set a, [text_pointer]
set [cmd+a], c
ife c, key_space
set [cmd+a], 0
set [typespace+a], c
bor [typespace+a], text_color
ifl [text_pointer], 31
add [text_pointer], 1
set a, pop
set pc, key_control_loop
:backspace
ifg [text_pointer], 0
sub [text_pointer], 1
set a, [text_pointer]
set [cmd+a], 0
set [typespace+a], key_space
set a, pop
set pc, key_control_loop

:pilot_key_loop
ife c, [key_pitch_up]
jsr pitch_up
ife c, [key_pitch_down]
jsr pitch_down
ife c, [key_yaw_left]
jsr yaw_left
ife c, [key_yaw_right]
jsr yaw_right
ife c, [key_roll_counterwise]
jsr roll_counterwise
ife c, [key_roll_clockwise]
jsr roll_clockwise
ife c, [key_throttle_cut]
jsr kill_throttle
ife c, [key_throttle_up]
jsr throttle_up
ife c, [key_throttle_down]
jsr throttle_down
ife c, [key_primary_weapon] 
jsr fire_primary
ife c, [key_secondary_weapon] 
jsr fire_secondary
ife c, [key_scroll_up]
jsr scroll_up
ife c, [key_scroll_down]
jsr scroll_down
set pc, key_control_loop

:control_loop
ife [mode], prompt_mode_num
set pc, pilot_mode_set
ife [mode], pilot_mode_num
set pc, prompt_mode_set

:prompt_mode_set
set push, a
set push, b
set push, c
set [mode], prompt_mode_num
set a, prompt_vram
set c, vram_size
set b, text_color
jsr memory_bor
set a, 0
jsr lem1802_select
set b, prompt_vram
jsr lem1802_map_VRAM
set c, pop
set b, pop
set a, pop
set pc, key_control_loop

:pilot_mode_set
set push, a
set push, b
set push, c
set [mode], pilot_mode_num
jsr update_pilot_screen
set c, pop
set b, pop
set a, pop
set pc, key_control_loop
;=====================================End of loop==========================================
:scroll_up
ifg [scroll], 0
sub [scroll], 1
jsr update_pilot_screen
set pc, pop

:scroll_down
ifl [scroll], 22
add [scroll], 1
jsr update_pilot_screen
set pc, pop

:fire_primary
jsr lasers_fire
set pc, pop

:fire_secondary

set pc, pop

:pitch_up
set push, a
set push, b
set a, [gyro_x_index]
jsr xlcmg_select
ife [gyro_x_torque], 0
set [gyro_x_torque], 50000
ife [gyro_x_torque], -50000
set [gyro_x_torque], 0
set b, [gyro_x_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:pitch_down
set push, a
set push, b
set a, [gyro_x_index]
jsr xlcmg_select
ife [gyro_x_torque], 0
set [gyro_x_torque], -50000
ife [gyro_x_torque], 50000
set [gyro_x_torque], 0
set b, [gyro_x_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:yaw_left
set push, a
set push, b
set a, [gyro_y_index]
jsr xlcmg_select
ife [gyro_y_torque], 0
set [gyro_y_torque], -50000
ife [gyro_y_torque], 50000
set [gyro_y_torque], 0
set b, [gyro_y_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:yaw_right
set push, a
set push, b
set a, [gyro_y_index]
jsr xlcmg_select
ife [gyro_y_torque], 0
set [gyro_y_torque], 50000
ife [gyro_y_torque], -50000
set [gyro_y_torque], 0
set b, [gyro_y_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:roll_counterwise
set push, a
set push, b
set a, [gyro_z_index]
jsr xlcmg_select
ife [gyro_z_torque], 0
set [gyro_z_torque], 50000
ife [gyro_z_torque], -50000
set [gyro_z_torque], 0
set b, [gyro_z_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:roll_clockwise
set push, a
set push, b
set a, [gyro_z_index]
jsr xlcmg_select
ife [gyro_z_torque], 0
set [gyro_z_torque], -50000
ife [gyro_z_torque], 50000
set [gyro_z_torque], 0
set b, [gyro_z_torque]
jsr xlcmg_set_torque_level
set b, pop
set a, pop
set pc, pop

:throttle_down
set push, a
set push, b
set a, 0x0000
set b, 0
jsr engines_fire
set b, pop
set a, pop
set pc, pop

:throttle_up
set push, a
set push, b
set a, 0x0000
set b, 60000
jsr engines_fire
set b, pop
set a, pop
set pc, pop

:kill_throttle
set push, a
set push, b
set a, 0x0000
set b, 0
jsr engines_fire
set b, pop
set a, pop
set pc, pop

:pause
set a, 0
set pc, pause

:end
set pc, end

:keybindings
:key_pitch_up dat key_w
:key_pitch_down dat key_s
:key_yaw_right dat key_d
:key_yaw_left dat key_a
:key_roll_clockwise dat key_e
:key_roll_counterwise dat key_q
:key_throttle_up dat key_r
:key_throttle_down dat key_f
:key_throttle_cut dat key_x
:key_primary_weapon dat key_1
:key_secondary_weapon dat key_2
:key_scroll_up dat key_arrow_up
:key_scroll_down dat key_arrow_down
dat key_space
dat key_space
dat key_space
dat key_space
dat key_space
dat key_space
dat key_space
dat 0
:default_keybindings_copy
dat key_w, key_s, key_d, key_a, key_e, key_q, key_r, key_f, key_x, key_1, key_2, key_arrow_up
dat key_arrow_down, key_space, key_space, key_space, key_space, key_space, key_space, key_space

:mode dat 0
:text_pointer dat 0
:cmd dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
:prompt_vram
dat "======CryptOS Prompt (WIP)======"
:typespace 
dat "                                "
dat "--------------------------------"
dat "                                "
dat "                                "
dat "        Press control to        "
dat "        toggle pilot mode       "
dat "                                "
dat "                                "
dat "                                "
dat "                                "
dat "                                "
.define prompt_mode_num 0
.define pilot_mode_num 1

;==============================Imports==================================
.include Drivers\Megastage Drivers\8k-UWTM.drv.dasm
.include Drivers\Megastage Drivers\Battery.drv.dasm
.include Drivers\Megastage Drivers\EIVD-16.drv.dasm
.include Drivers\Megastage Drivers\FFA.drv.dasm
.include Drivers\Megastage Drivers\Generator.drv.dasm
.include Drivers\Megastage Drivers\HTA-90.drv.dasm
.include Drivers\Megastage Drivers\NCC-1701.drv.dasm
.include Drivers\Megastage Drivers\PPS.drv.dasm
.include Drivers\Megastage Drivers\S8MD.drv.dasm
.include Drivers\Megastage Drivers\Shield.drv.dasm
.include Drivers\Megastage Drivers\TLW-16.drv.dasm
.include Drivers\Megastage Drivers\UCPU.drv.dasm
.include Drivers\Megastage Drivers\XLCMG.drv.dasm
.include Drivers\Standard Drivers\Clock.drv.dasm
.include Drivers\Standard Drivers\Keyboard.drv.dasm
.include Drivers\Standard Drivers\LEM1802.drv.dasm
.include Drivers\Standard Drivers\M35FDFileDriver.drv.dasm
.include Libraries\Utility.lib.dasm
.include Managers\Error.mgr.dasm
.include Managers\Flight.mgr.dasm
.include Managers\Interrupt.mgr.dasm
.include Managers\Weapon.mgr.dasm
.include CryptOSDisplay.mgr.dasm